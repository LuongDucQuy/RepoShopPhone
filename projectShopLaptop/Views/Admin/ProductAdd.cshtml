@model projectShopLaptop.DAL.Tbl_Product

@{
    ViewBag.Title = "ProductAdd";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link href="~/AdminStyle/css/ProductAdd.css" rel="stylesheet" />
<div class="container">
    @using (Html.BeginForm("ProductAdd", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                <!-- Thêm lớp row -->
                @Html.LabelFor(model => model.ProductName, "Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" }) <!-- Thêm lớp font-weight-bold -->
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            @{
                List<SelectListItem> data = ViewBag.CategoryList;
            }

            <div class="form-group row">
                @Html.LabelFor(model => model.CategoryId, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" }) <!-- Thêm lớp font-weight-bold -->
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, data, "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.IsDelete)

        <div class="form-group row">
            @Html.LabelFor(model => model.ProductImage, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                <input type="file" name="file" id="file" style="width: 100%;" accept="image/*" onchange="previewImage(event)" />
                <img id="imagePreview" src="#" alt="Image Preview" style="display:none; max-width: 150px; margin-top: 10px;" />
                @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Quantity, "Số lượng", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" }) <!-- Thêm lớp font-weight-bold -->
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Price, "Giá tiền", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" }) <!-- Thêm lớp font-weight-bold -->
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Thêm mới" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<script>
    function previewImage(event) {
        const image = document.getElementById('imagePreview');
        image.src = URL.createObjectURL(event.target.files[0]);
        image.style.display = 'block'; // Hiển thị ảnh
    }
</script>